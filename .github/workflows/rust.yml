name: Cross-compile for macOS (aarch64)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OSXCROSS_ROOT: ${{ github.workspace }}/osxcross
      SDK_VERSION: 11.3
      TARGET: aarch64-apple-darwin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential clang cmake libz-dev libtinfo-dev curl xz-utils

    - name: Set up osxcross
      run: |
        git clone https://github.com/tpoechtrager/osxcross.git
        cd osxcross
        mkdir -p tarballs
        cp ../MacOSX${SDK_VERSION}.sdk.tar.xz tarballs/  # assumes you added the SDK in the repo
        UNATTENDED=1 ./tools/gen_sdk_package_pbzx.py tarballs/MacOSX${SDK_VERSION}.sdk.tar.xz
        UNATTENDED=1 ./build.sh

    - name: Add osxcross to PATH
      run: echo "$OSXCROSS_ROOT/target/bin" >> $GITHUB_PATH

    - name: Add Rust target
      run: rustup target add $TARGET

    - name: Build for macOS (aarch64)
      env:
        CC_aarch64_apple_darwin: o64-clang
        AR_aarch64_apple_darwin: aarch64-apple-darwin15-ar
        MACOSX_DEPLOYMENT_TARGET: ${{ env.SDK_VERSION }}
      run: |
        mkdir -p .cargo
        echo "[target.${TARGET}]" > .cargo/config.toml
        echo "linker = \"o64-clang\"" >> .cargo/config.toml
        echo "ar = \"aarch64-apple-darwin15-ar\"" >> .cargo/config.toml
        cargo build --release --target $TARGET

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: macos-aarch64-binary
        path: target/aarch64-apple-darwin/release/
